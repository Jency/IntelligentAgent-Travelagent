/*************************************************************************
*     Module name: CustomerUi.java
*     Package: ia.travelagency
*
*
*     Functionality: This file has class for managing the UI of the
*                    application.
*
*
*     This file is part of Multi agent system
*
*     TravelAgent is free software: you can redistribute it
*     and/or modify it under the terms of the GNU General Public
*     License as published by the Free Software Foundation, either
*     version 3 of the License, or (at your option) any later version.
*
*     TravelAgent is distributed in the hope that it will be useful,
*     but WITHOUT ANY WARRANTY; without even the implied warranty of
*     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*     GNU General Public License for more details.
*
*     You should have received a copy of the GNU General Public License
*     along with iThink. If not, see <http://www.gnu.org/licenses/>.
*
*************************************************************************/

/*************************************************************************
 * Imports section
 *************************************************************************/

package ia.travelagency;
import ia.travelagency.ontology.CreditCard;
import ia.travelagency.ontology.FlightDetail;
import ia.travelagency.ontology.HotelDetail;
import ia.travelagency.ontology.TravelDetail;
import jade.core.AID;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;



public class CustomerUi extends javax.swing.JFrame {

    /** Variables initialization ***/
    private TravelDetail travelDetails = new TravelDetail();
    private TravelAgent travelAgent;
    public DefaultTableModel dmHotel;
    public Vector vHotel;
    public long sleepDuration;


    public CustomerUi(TravelAgent a) {
        /* Initialize the interface */
	super(a.getLocalName());
        travelAgent = a;
        initComponents();
        int iWidth= 990;
        int iHeight = 215;
        this.setSize(iWidth, iHeight);
        setScreencenter();
        sleepDuration = 200;
        initLocations();
        jlBusy.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLPHotel = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblAcco = new javax.swing.JTable();
        jLblBest = new javax.swing.JLabel();
        jLblAccom = new javax.swing.JLabel();
        BestAcco = new javax.swing.JTextField();
        proceedPay = new javax.swing.JButton();
        flightButton = new javax.swing.JButton();
        jLPCredit = new javax.swing.JLayeredPane();
        jLblExpdt = new javax.swing.JLabel();
        jLblCrdType = new javax.swing.JLabel();
        jLblCrdNo = new javax.swing.JLabel();
        ccType = new javax.swing.JComboBox();
        ccExpiry = new javax.swing.JTextField();
        ccNumber = new javax.swing.JTextField();
        payButton = new javax.swing.JButton();
        jLblCrdNo1 = new javax.swing.JLabel();
        payAmount = new javax.swing.JTextField();
        jLPTravel = new javax.swing.JLayeredPane();
        jLblOrigin = new javax.swing.JLabel();
        jLblDestination = new javax.swing.JLabel();
        jLblFrom = new javax.swing.JLabel();
        fromDate = new javax.swing.JTextField();
        jLblTo = new javax.swing.JLabel();
        toDate = new javax.swing.JTextField();
        jLblGuest = new javax.swing.JLabel();
        toAddress = new javax.swing.JComboBox();
        fromAddress = new javax.swing.JComboBox();
        guestCount = new javax.swing.JComboBox();
        flightClass = new javax.swing.JComboBox();
        jLblFlClass = new javax.swing.JLabel();
        jLblHotelType = new javax.swing.JLabel();
        hotelType = new javax.swing.JComboBox();
        HotelButton = new javax.swing.JButton();
        jLPFlight = new javax.swing.JLayeredPane();
        jLblDepartFlight = new javax.swing.JLabel();
        DepartureFlight = new javax.swing.JComboBox();
        jLblReturnFlight = new javax.swing.JLabel();
        ReturnFlight = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jlExit = new javax.swing.JLabel();
        jlRestart = new javax.swing.JLabel();
        jlBusy = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Travel assistant system");
        setResizable(false);

        jLPHotel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hotel booking - Accommodation selected", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jTblAcco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Address", "Class", "Type", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblAcco.setOpaque(false);
        jTblAcco.setRowSelectionAllowed(false);
        jTblAcco.setShowGrid(false);
        jScrollPane1.setViewportView(jTblAcco);

        jScrollPane1.setBounds(30, 50, 890, 100);
        jLPHotel.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblBest.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblBest.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblBest.setText("Best accommodation selected:");
        jLblBest.setBounds(110, 160, 240, 20);
        jLPHotel.add(jLblBest, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblAccom.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
        jLblAccom.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblAccom.setText("Available accommodations:");
        jLblAccom.setBounds(30, 20, 410, 25);
        jLPHotel.add(jLblAccom, javax.swing.JLayeredPane.DEFAULT_LAYER);

        BestAcco.setEditable(false);
        BestAcco.setFont(new java.awt.Font("Lucida Grande", 1, 10)); // NOI18N
        BestAcco.setForeground(new java.awt.Color(0, 102, 51));
        BestAcco.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        BestAcco.setBounds(370, 160, 300, 20);
        jLPHotel.add(BestAcco, javax.swing.JLayeredPane.DEFAULT_LAYER);

        proceedPay.setText("Proceed to payment");
        proceedPay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        proceedPay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                proceedPayMouseClicked(evt);
            }
        });
        proceedPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedPayActionPerformed(evt);
            }
        });
        proceedPay.setBounds(730, 160, 190, 29);
        jLPHotel.add(proceedPay, javax.swing.JLayeredPane.DEFAULT_LAYER);

        flightButton.setText("Get Flight Quotes");
        flightButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        flightButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flightButtonMouseClicked(evt);
            }
        });
        flightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightButtonActionPerformed(evt);
            }
        });

        jLPCredit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Credit card details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jLblExpdt.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblExpdt.setText("Expiry date (mm/yyyy):");
        jLblExpdt.setBounds(20, 115, 170, 20);
        jLPCredit.add(jLblExpdt, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblCrdType.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblCrdType.setText("Card type:");
        jLblCrdType.setBounds(20, 50, 170, 20);
        jLPCredit.add(jLblCrdType, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblCrdNo.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblCrdNo.setText("Card number:");
        jLblCrdNo.setBounds(20, 80, 170, 20);
        jLPCredit.add(jLblCrdNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ccType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VISA", "MasterCard", "American Express", "Discover" }));
        ccType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ccType.setBounds(190, 50, 170, 20);
        jLPCredit.add(ccType, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ccExpiry.setFont(new java.awt.Font("Lucida Grande", 1, 10)); // NOI18N
        ccExpiry.setForeground(new java.awt.Color(0, 102, 51));
        ccExpiry.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ccExpiry.setToolTipText("Expiry date (mm/yyyy)");
        ccExpiry.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ccExpiry.setBounds(190, 115, 170, 20);
        jLPCredit.add(ccExpiry, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ccNumber.setFont(new java.awt.Font("Lucida Grande", 1, 10)); // NOI18N
        ccNumber.setForeground(new java.awt.Color(0, 102, 51));
        ccNumber.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ccNumber.setToolTipText("Credit card number(XXXXXXXXXXXXXXXX)");
        ccNumber.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ccNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccNumberActionPerformed(evt);
            }
        });
        ccNumber.setBounds(190, 80, 170, 20);
        jLPCredit.add(ccNumber, javax.swing.JLayeredPane.DEFAULT_LAYER);

        payButton.setText("Pay");
        payButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        payButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                payButtonMouseClicked(evt);
            }
        });
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });
        payButton.setBounds(20, 150, 340, 29);
        jLPCredit.add(payButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblCrdNo1.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblCrdNo1.setText("Payment amount:");
        jLblCrdNo1.setBounds(20, 20, 170, 20);
        jLPCredit.add(jLblCrdNo1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        payAmount.setEditable(false);
        payAmount.setFont(new java.awt.Font("Lucida Grande", 1, 10)); // NOI18N
        payAmount.setForeground(new java.awt.Color(0, 102, 51));
        payAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        payAmount.setText("$300");
        payAmount.setToolTipText("Total payment amount including fight booking cost and hotel rent");
        payAmount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        payAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payAmountActionPerformed(evt);
            }
        });
        payAmount.setBounds(190, 20, 170, 20);
        jLPCredit.add(payAmount, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLPTravel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Travel information", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jLblOrigin.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblOrigin.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblOrigin.setText("Origin:");
        jLblOrigin.setBounds(20, 25, 70, 20);
        jLPTravel.add(jLblOrigin, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblDestination.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblDestination.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblDestination.setText("Destination:");
        jLblDestination.setBounds(470, 25, 90, 20);
        jLPTravel.add(jLblDestination, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblFrom.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblFrom.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblFrom.setText("Depart on:");
        jLblFrom.setBounds(20, 55, 100, 20);
        jLPTravel.add(jLblFrom, javax.swing.JLayeredPane.DEFAULT_LAYER);

        fromDate.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        fromDate.setForeground(new java.awt.Color(0, 102, 51));
        fromDate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fromDate.setText("25-Nov-10");
        fromDate.setToolTipText("Date of departure (DD-Mon-YY)");
        fromDate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromDateActionPerformed(evt);
            }
        });
        fromDate.setBounds(140, 55, 150, 20);
        jLPTravel.add(fromDate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblTo.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblTo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblTo.setText("Return on:");
        jLblTo.setBounds(320, 55, 100, 20);
        jLPTravel.add(jLblTo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        toDate.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        toDate.setForeground(new java.awt.Color(0, 102, 51));
        toDate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        toDate.setText("01-Dec-10");
        toDate.setToolTipText("Date of return (DD-Mon-YY)");
        toDate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        toDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toDateActionPerformed(evt);
            }
        });
        toDate.setBounds(420, 55, 150, 20);
        jLPTravel.add(toDate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblGuest.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblGuest.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblGuest.setText("No. of guest:");
        jLblGuest.setBounds(20, 85, 120, 20);
        jLPTravel.add(jLblGuest, javax.swing.JLayeredPane.DEFAULT_LAYER);

        toAddress.setToolTipText("Destination location");
        toAddress.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        toAddress.setBounds(560, 25, 370, 20);
        jLPTravel.add(toAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);

        fromAddress.setToolTipText("From which location you will be starting the journey");
        fromAddress.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fromAddress.setBounds(90, 25, 370, 20);
        jLPTravel.add(fromAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);

        guestCount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        guestCount.setToolTipText("Total number of persons travelling along with you for room booking");
        guestCount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guestCount.setBounds(140, 85, 70, 20);
        jLPTravel.add(guestCount, javax.swing.JLayeredPane.DEFAULT_LAYER);

        flightClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Anything", "Economy", "Business" }));
        flightClass.setToolTipText("Flight class");
        flightClass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        flightClass.setBounds(420, 85, 130, 20);
        jLPTravel.add(flightClass, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblFlClass.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblFlClass.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblFlClass.setText("Flight class:");
        jLblFlClass.setBounds(320, 85, 100, 20);
        jLPTravel.add(jLblFlClass, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblHotelType.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblHotelType.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblHotelType.setText("Hotel preference:");
        jLblHotelType.setBounds(580, 85, 140, 20);
        jLPTravel.add(jLblHotelType, javax.swing.JLayeredPane.DEFAULT_LAYER);

        hotelType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Anything", "Deluxe", "Premier", "Standard", "Suite" }));
        hotelType.setToolTipText("Type of hotel");
        hotelType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hotelType.setBounds(720, 85, 130, 20);
        jLPTravel.add(hotelType, javax.swing.JLayeredPane.DEFAULT_LAYER);

        HotelButton.setText("Get Hotel Quotes");
        HotelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HotelButton.setEnabled(false);
        HotelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HotelButtonMouseClicked(evt);
            }
        });
        HotelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HotelButtonActionPerformed(evt);
            }
        });

        jLPFlight.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Flight booking - Choose your preferred airlines", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jLblDepartFlight.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblDepartFlight.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblDepartFlight.setText("Departure:");
        jLblDepartFlight.setBounds(30, 30, 100, 20);
        jLPFlight.add(jLblDepartFlight, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DepartureFlight.setToolTipText("Onward journey preference");
        DepartureFlight.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DepartureFlight.setBounds(130, 30, 340, 20);
        jLPFlight.add(DepartureFlight, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLblReturnFlight.setFont(new java.awt.Font("Lucida Grande", 1, 10));
        jLblReturnFlight.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLblReturnFlight.setText("Return:");
        jLblReturnFlight.setBounds(480, 30, 60, 20);
        jLPFlight.add(jLblReturnFlight, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ReturnFlight.setToolTipText("Return journey preference");
        ReturnFlight.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ReturnFlight.setBounds(540, 30, 340, 20);
        jLPFlight.add(ReturnFlight, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 51, 153));
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jlExit.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jlExit.setText("Exit");
        jlExit.setAlignmentX(1.0F);
        jlExit.setBounds(new java.awt.Rectangle(10, 10, 0, 0));
        jlExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlExitMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlExitMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlExitMouseEntered(evt);
            }
        });

        jlRestart.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jlRestart.setText("Restart booking");
        jlRestart.setAlignmentX(1.0F);
        jlRestart.setBounds(new java.awt.Rectangle(10, 10, 0, 0));
        jlRestart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlRestart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlRestartMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlRestartMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlRestartMouseEntered(evt);
            }
        });

        jlBusy.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
		try{
        jlBusy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apple_loader.gif"))); // NOI18N
		}catch(Exception ex){
			System.out.println("Icon missing - " + ex.getMessage());
		}
        jlBusy.setText(" Communicating with agents...");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLPHotel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 951, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jlBusy, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 225, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(57, 57, 57)
                        .add(flightButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 158, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(HotelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 158, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jlRestart)
                        .add(34, 34, 34)
                        .add(jlExit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jLPCredit)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 560, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLPTravel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 951, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLPFlight, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 951, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlRestart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlExit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(4, 4, 4)
                .add(jLPTravel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(HotelButton)
                    .add(flightButton)
                    .add(jlBusy, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(jLPFlight, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jLPHotel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 198, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .add(jLPCredit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Method to fetch the from and to locations ***/
    private void initLocations() {

         try {
            Class.forName("org.sqlite.JDBC");
            Connection conn = DriverManager.getConnection("jdbc:sqlite:data/travelagency.sqlite3");
            Statement stat = conn.createStatement();
            String stmt = "select location from locations ";
            System.out.println("Sql statement - " + stmt);
            ResultSet rs = stat.executeQuery(stmt);
            while (rs.next()) {
                fromAddress.addItem(rs.getString("location"));
                toAddress.addItem(rs.getString("location"));
            }
            rs.close();
            conn.close();
        } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
        }
        toAddress.setSelectedIndex(1);

    }

    private void ccNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccNumberActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_ccNumberActionPerformed

    /** Method to perform flight search action when asked for ***/
    private void flightButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flightButtonMouseClicked

        if(flightButton.isEnabled()){
        
            if (fromAddress.getSelectedItem().toString().equals(toAddress.getSelectedItem().toString())){
                JOptionPane.showMessageDialog(CustomerUi.this, "Origin is same as destination !!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if (fromDate.getText().trim().equals("") || toDate.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(CustomerUi.this, "Please enter proper date!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else {
               Runnable rRunnable = new Runnable(){
                   public void run(){
                       try {

                           int retryCnt = 0;
                           jlBusy.setVisible(true);
                           setCustomerDetails();
                           if(flightClass.getSelectedIndex() != 0){
                               travelDetails.setClassOfFlight(flightClass.getSelectedItem().toString().trim());
                           }
                           travelAgent.doFlightSearch(travelDetails);
                           while((TravelAgent.flightDetailList == null) || retryCnt <=5){
                               Thread.sleep(sleepDuration);
                               retryCnt = retryCnt + 1;
                           }

                       } catch (Exception e) {

                           JOptionPane.showMessageDialog(CustomerUi.this, "Invalid values: "+e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                       }

                       SwingUtilities.invokeLater(new Runnable(){
                           public void run(){

                               jlBusy.setVisible(false);
                               if (TravelAgent.flightDetailList == null){
                                  JOptionPane.showMessageDialog(CustomerUi.this, "Sorry no matching flights!!!", "Information", JOptionPane.INFORMATION_MESSAGE);
                               }
                               populateFlight();
                           }
                        });
                   }
              };
              new Thread(rRunnable).start();
              int iWidth=990;
              int iHeight = 300;
              setSize(iWidth, iHeight);
              setScreencenter();
              flightButton.setEnabled(false);
              HotelButton.setEnabled(true);
            }
        }
           
    }//GEN-LAST:event_flightButtonMouseClicked

    /** Method to set the customer preferences for searching***/
    public void setCustomerDetails(){

        travelDetails.setToAddress(toAddress.getSelectedItem().toString().trim());
        travelDetails.setFromAddress(fromAddress.getSelectedItem().toString().trim());
        travelDetails.setToDate(toDate.getText().trim());
        travelDetails.setFromDate(fromDate.getText().trim());
        travelDetails.setGuestCount(Integer.parseInt(guestCount.getSelectedItem().toString().trim()));

    }

    /** Method to make the screen appear in the center***/
    public void setScreencenter(){
        
        Dimension screenSize = getToolkit().getScreenSize();
        Dimension size = getSize();
        int Left = (screenSize.width - size.width)/2;
        int Top = (screenSize.height - size.height)/2;
        setLocation(Left, Top);
    }

    /** Method to set the populate the flight details retrieved from agents***/
    public void populateFlight(){


		for(Iterator<FlightDetail> fDetailIter = TravelAgent.flightDetailList.iterator(); fDetailIter.hasNext();){
			FlightDetail fDetail = fDetailIter.next();
            DepartureFlight.addItem( fDetail.getFlightName() + " - " + fDetail.getFlightClass() + " (S$" + fDetail.getFlightCost() + ")");
        }

		for(Iterator<FlightDetail> retfDetailIter = TravelAgent.retFlightDetailList.iterator(); retfDetailIter.hasNext();){
			FlightDetail retfDetail = retfDetailIter.next();
            ReturnFlight.addItem( retfDetail.getFlightName() + " - " + retfDetail.getFlightClass() + " (S$" + retfDetail.getFlightCost() + ")");

        }
    }

    private void flightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightButtonActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_flightButtonActionPerformed

    private void fromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromDateActionPerformed


    /** Method to perform hotel search action when asked for ***/
    private void HotelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HotelButtonMouseClicked

        if(HotelButton.isEnabled()){
               Runnable rRunnable = new Runnable()
               {
                   public void run(){
                       try {

                           int retryCnt = 0;
                           jlBusy.setVisible(true);
                           setCustomerDetails();
                           if(hotelType.getSelectedIndex()!=0){
                              travelDetails.setTypeOfHotel(hotelType.getSelectedItem().toString().trim());
                           }
                           travelAgent.doHotelSearch(travelDetails);
                           while(travelAgent.hotelDetailList.isEmpty() || retryCnt <=5){
                               Thread.sleep(sleepDuration);
                               retryCnt = retryCnt + 1;
                           }

                       } catch (Exception e) {

                           JOptionPane.showMessageDialog(CustomerUi.this, "Invalid values: "+e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                       }

                       SwingUtilities.invokeLater(new Runnable(){
                           public void run(){

                               jlBusy.setVisible(false);
                               populateHotel();
                           }
                        });
                   }
              };
              new Thread(rRunnable).start();
              int iWidth=990;
              int iHeight = 505;
              setSize(iWidth, iHeight);
              setScreencenter();
              HotelButton.setEnabled(false);
        }

    }//GEN-LAST:event_HotelButtonMouseClicked

    /** Method to set the populate the hotel details retrieved from agents***/
    public void populateHotel(){
        
        Iterator hotelItr = travelAgent.hotelDetailList.iterator();
        dmHotel = new DefaultTableModel();
        dmHotel.setColumnIdentifiers(new String[] {"Name", "Address", "Class", "Type", "Cost"});

        while (hotelItr.hasNext()) {
            HotelDetail hDetail = null;
            hDetail = (HotelDetail)hotelItr.next();
            System.out.println("Details: " + hDetail.getHotelName() + ":" + hDetail.getHotelAddr() + ":" + hDetail.getHotelClass() + ":" + hDetail.getHotelType() + ":" + hDetail.getHotelCost());
            vHotel = new Vector(0);
            vHotel.add(hDetail.getHotelName());
            vHotel.add(hDetail.getHotelAddr());
            vHotel.add(hDetail.getHotelClass());
            vHotel.add(hDetail.getHotelType());
            vHotel.add("S$" +hDetail.getHotelCost());
            dmHotel.addRow(vHotel);
            jTblAcco.setModel(dmHotel);
        }

        BestAcco.setText(travelAgent.getTravelDetail().getHotelDetail().getHotelName().toString());
        System.out.println("Hotel obtained");
    }


    private void HotelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HotelButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HotelButtonActionPerformed

    /** Method to perform when proceed to pay is clicked***/
    private void proceedPayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proceedPayMouseClicked
        // TODO add your handling code here:
        
        if(proceedPay.isEnabled()){

            int iWidth=990;
            int iHeight = 710;
            
            DepartureFlight.setEnabled(false);
            ReturnFlight.setEnabled(false);
            fromAddress.setEnabled(false);
            toAddress.setEnabled(false);
            fromDate.setEnabled(false);
            toDate.setEnabled(false);
            guestCount.setEnabled(false);
            flightClass.setEnabled(false);
            hotelType.setEnabled(false);
            
            int amount = travelAgent.calculateAmount(travelDetails, DepartureFlight.getSelectedIndex(), ReturnFlight.getSelectedIndex());

            payAmount.setText("S$" + amount);
            setSize(iWidth, iHeight);
            setScreencenter();
            proceedPay.setEnabled(false);
        }

    }//GEN-LAST:event_proceedPayMouseClicked

    private void proceedPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedPayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proceedPayActionPerformed

    /** Method to perform when pay button is clicked***/
    private void payButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payButtonMouseClicked

        if(payButton.isEnabled()){

            if(ccNumber.getText().trim().equals("") || ccExpiry.getText().trim().equals("")){
                JOptionPane.showMessageDialog(CustomerUi.this, "Card number or expiry date cannot be empty!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(!checkIfNumber(ccNumber.getText().trim())){
                JOptionPane.showMessageDialog(CustomerUi.this, "Card number should be XXXXXXXXXXXXXXXX format !!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else {
               Runnable rRunnable = new Runnable(){
                   public void run(){
                       try {

                           System.out.println("Processing payment");
                           jlBusy.setVisible(true);
                           String type = ccType.getSelectedItem().toString();
                           long creditCardNumber = Long.parseLong(ccNumber.getText());
                           CreditCard creditCard = new CreditCard(type, creditCardNumber, ccExpiry.getText());
                           travelAgent.makePaymentAndFinalize(creditCard,DepartureFlight.getSelectedIndex(),ReturnFlight.getSelectedIndex());
                           Thread.sleep(sleepDuration);
                           System.out.println("Processed payment");

                       } catch (Exception e) {

                           JOptionPane.showMessageDialog(CustomerUi.this, "Invalid values: "+e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                       }

                       SwingUtilities.invokeLater(new Runnable(){
                           public void run(){

                               jlBusy.setVisible(false);
                               populateBooking();
                           }
                        });
                   }
              };
              new Thread(rRunnable).start();
            }
        }
           
    }//GEN-LAST:event_payButtonMouseClicked

    /** Method to if the string is a number***/
    public boolean checkIfNumber(String in) {

        try {

            Double.parseDouble(in);

        } catch (NumberFormatException ex) {
            return false;
        }

        return true;
    }

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payButtonActionPerformed

    private void payAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payAmountActionPerformed

    /** Method to perform when hover restart button***/
    private void jlRestartMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlRestartMouseEntered

        jlRestart.setForeground(Color.BLUE);
        jlRestart.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jlRestartMouseEntered

    /** Method to perform when hover exit button***/
    private void jlExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlExitMouseEntered

        jlExit.setForeground(Color.BLUE);
        jlExit.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jlExitMouseEntered

    /** Method to perform when exit restart button***/
    private void jlRestartMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlRestartMouseExited

        jlRestart.setForeground(Color.BLACK);
    }//GEN-LAST:event_jlRestartMouseExited

    /** Method to perform when exit exit button***/
    private void jlExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlExitMouseExited
        jlExit.setForeground(Color.BLACK);
    }//GEN-LAST:event_jlExitMouseExited

    /** Method to perform when clicking restart button***/
    private void jlRestartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlRestartMouseClicked
        dispose();
        CustomerUi customerUi = new CustomerUi(travelAgent);
        customerUi.setVisible(true);
        
    }//GEN-LAST:event_jlRestartMouseClicked

    /** Method to perform when clicking exit button***/
    private void jlExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlExitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jlExitMouseClicked

    private void toDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toDateActionPerformed

    /** Method to set the summary of booking***/
    public void populateBooking(){

        if(TravelAgent.PaymentStatus.equals("payment-success"))
        {
            jTextArea1.setForeground(Color.blue);
            jTextArea1.setText("There was an error processing your credit card information. \n");
            jTextArea1.append("Please check your credit card details and try again. \n");
            jTextArea1.setText("Payment successful and here are is symmary of booking \n");
            jTextArea1.append("------------------------------------------------------ \n");
            jTextArea1.append("Booking confirmation details: \n");
            jTextArea1.append("Onward Flight name: " + travelAgent.getTravelDetail().getFlightDetail().getFlightName().toString() );
            jTextArea1.append(" (On: " + fromDate.getText() + "), ");
            jTextArea1.append("Class: " + travelAgent.getTravelDetail().getFlightDetail().getFlightClass().toString() + "\n");
            jTextArea1.append("Return Flight name: " + travelAgent.getTravelDetail().getRetFlightDetail().getFlightName().toString());
            jTextArea1.append(" (On: " + toDate.getText() + "), ");
            jTextArea1.append("Class: " + travelAgent.getTravelDetail().getRetFlightDetail().getFlightClass().toString() + "\n");
            jTextArea1.append("Hotel Name: " + travelAgent.getTravelDetail().getHotelDetail().getHotelName().toString() + "\n");
            jTextArea1.append("Type: " + travelAgent.getTravelDetail().getHotelDetail().getHotelType().toString());
            jTextArea1.append(", Class: " + travelAgent.getTravelDetail().getHotelDetail().getHotelClass().toString() + "\n");
            jTextArea1.append("------------------------------------------------------ \n");
            jTextArea1.append("\n");
            jTextArea1.append("Thanks for booking with us and we look forward to serve you again. \n");
            jTextArea1.append("Have an enjoyable trip. ");
            payButton.setEnabled(false);

        }
        else  {
            
            jTextArea1.setForeground(Color.red);
            jTextArea1.setText("ERROR:: There was an error processing your credit card information. \n");
            jTextArea1.append("\n");
            jTextArea1.append("Please check your credit card details and try again. \n");
            payButton.setEnabled(true);

        }

    }
    /**
    * @param args the command line arguments
    */
    public void showGui() {
	super.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BestAcco;
    private javax.swing.JComboBox DepartureFlight;
    private javax.swing.JButton HotelButton;
    private javax.swing.JComboBox ReturnFlight;
    private javax.swing.JTextField ccExpiry;
    private javax.swing.JTextField ccNumber;
    private javax.swing.JComboBox ccType;
    private javax.swing.JButton flightButton;
    private javax.swing.JComboBox flightClass;
    private javax.swing.JComboBox fromAddress;
    private javax.swing.JTextField fromDate;
    private javax.swing.JComboBox guestCount;
    private javax.swing.JComboBox hotelType;
    private javax.swing.JLayeredPane jLPCredit;
    private javax.swing.JLayeredPane jLPFlight;
    private javax.swing.JLayeredPane jLPHotel;
    private javax.swing.JLayeredPane jLPTravel;
    private javax.swing.JLabel jLblAccom;
    private javax.swing.JLabel jLblBest;
    private javax.swing.JLabel jLblCrdNo;
    private javax.swing.JLabel jLblCrdNo1;
    private javax.swing.JLabel jLblCrdType;
    private javax.swing.JLabel jLblDepartFlight;
    private javax.swing.JLabel jLblDestination;
    private javax.swing.JLabel jLblExpdt;
    private javax.swing.JLabel jLblFlClass;
    private javax.swing.JLabel jLblFrom;
    private javax.swing.JLabel jLblGuest;
    private javax.swing.JLabel jLblHotelType;
    private javax.swing.JLabel jLblOrigin;
    private javax.swing.JLabel jLblReturnFlight;
    private javax.swing.JLabel jLblTo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTblAcco;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel jlBusy;
    private javax.swing.JLabel jlExit;
    private javax.swing.JLabel jlRestart;
    private javax.swing.JTextField payAmount;
    private javax.swing.JButton payButton;
    private javax.swing.JButton proceedPay;
    private javax.swing.JComboBox toAddress;
    private javax.swing.JTextField toDate;
    // End of variables declaration//GEN-END:variables

}
